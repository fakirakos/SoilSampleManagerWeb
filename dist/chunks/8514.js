"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8514],{48139:(e,t,r)=>{r.d(t,{E:()=>i});class s{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const s=this._options[e];if(s){const i="boolean"!=typeof s&&s.name?s.name:e,o="boolean"!=typeof s&&s.getter?s.getter(t):t[e];null!=o&&(r[i]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else r[e]=t[e]}),this),r}}function i(e){return new s(e)}},76199:(e,t,r)=>{r.d(t,{et:()=>g,ef:()=>b,bI:()=>N,Wf:()=>w});var s=r(57603),i=r(76877),o=r(43388),n=r(11589),a=r(2364),l=r(54067),u=r(23324),p=r(37501),c=r(74791),d=(r(89847),r(32780),r(76997),r(43329)),m=r(56793),y=r(85555),f=r(89020);let h=class extends p.wq{constructor(e){super(e),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}};(0,u._)([(0,c.Cb)()],h.prototype,"accumulateAttributeNames",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"currentVersion",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"defaultTravelMode",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"directionsLanguage",void 0),(0,u._)([(0,d.J)(y.GX)],h.prototype,"directionsLengthUnits",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"directionsSupportedLanguages",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"directionsTimeAttribute",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"hasZ",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"impedance",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"networkDataset",void 0),(0,u._)([(0,c.Cb)({type:[f.Z]})],h.prototype,"supportedTravelModes",void 0),h=(0,u._)([(0,m.j)("esri.rest.support.NetworkServiceDescription")],h);const v=h;function g(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function b(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function w(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,o.pC)(e)&&e.hasZ)return!0}return!1}async function N(e,t,r){if(!e)throw new i.Z("network-service:missing-url","Url to Network service is missing");const o=(0,l.lA)({f:"json",token:t},r),{data:u}=await(0,s.default)(e,o);u.supportedTravelModes||(u.supportedTravelModes=[]);for(let e=0;e<u.supportedTravelModes.length;e++)u.supportedTravelModes[e].id||(u.supportedTravelModes[e].id=u.supportedTravelModes[e].itemId);const p=u.currentVersion>=10.4?async function(e,t,r){try{const i=(0,l.lA)({f:"json",token:t},r),o=(0,a.Qj)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:n,defaultTravelMode:u}}=await(0,s.default)(o,i);return{supportedTravelModes:n,defaultTravelMode:u}}catch(e){throw new i.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,t,r):async function(e,t){var r,i;const o=(0,l.lA)({f:"json"},t),{data:u}=await(0,s.default)(e.replace(/\/rest\/.*$/i,"/info"),o);if(!u||!u.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:p}=u,c=(0,a.Qj)(p)+"/sharing/rest/portals/self",{data:d}=await(0,s.default)(c,o),m=(0,n.hS)("helperServices.routingUtilities.url",d);if(!m)return{supportedTravelModes:[],defaultTravelMode:null};const y=(0,l.en)(p),f=/\/solve$/i.test(y.path)?"Route":/\/solveclosestfacility$/i.test(y.path)?"ClosestFacility":"ServiceAreas",h=(0,l.lA)({f:"json",serviceName:f},t),v=(0,a.Qj)(m)+"/GetTravelModes/execute",g=await(0,s.default)(v,h),b=[];let w=null;if(null!=g&&null!=(r=g.data)&&null!=(i=r.results)&&i.length){const e=g.data.results;for(const t of e){var N;if("supportedTravelModes"===t.paramName){if(null!=(N=t.value)&&N.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);b.push(t)}}else"defaultTravelMode"===t.paramName&&(w=t.value)}}return{supportedTravelModes:b,defaultTravelMode:w}}(e,r),{defaultTravelMode:c,supportedTravelModes:d}=await p;return u.defaultTravelMode=c,u.supportedTravelModes=d,v.fromJSON(u)}},48514:(e,t,r)=>{r.d(t,{F:()=>C});var s=r(57603),i=r(43388),o=r(48139),n=r(17655),a=r(76199),l=r(54067),u=r(23324),p=r(13470),c=r(37501),d=r(74791),m=(r(89847),r(32780),r(76997),r(56568)),y=r(56793),f=r(4130),h=r(19567),v=r(47569);let g=class extends c.wq{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null}};(0,u._)([(0,d.Cb)({type:f.default,json:{write:!0}})],g.prototype,"directionLines",void 0),(0,u._)([(0,d.Cb)({type:f.default,json:{write:!0}})],g.prototype,"directionPoints",void 0),(0,u._)([(0,d.Cb)({type:v.Z,json:{write:!0}})],g.prototype,"directions",void 0),(0,u._)([(0,d.Cb)({type:p.Z,json:{write:!0}})],g.prototype,"route",void 0),(0,u._)([(0,d.Cb)({type:String,json:{write:!0}})],g.prototype,"routeName",void 0),(0,u._)([(0,d.Cb)({type:[p.Z],json:{write:!0}})],g.prototype,"stops",void 0),g=(0,u._)([(0,y.j)("esri.rest.support.RouteResult")],g);const b=g;function w(e){return e&&f.default.fromJSON(e).features.map((e=>e))}let N=class extends c.wq{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return w(t.barriers)}readPolylineBarriers(e){return w(e)}readPolygonBarriers(e){return w(e)}};(0,u._)([(0,d.Cb)({type:[h.Z]})],N.prototype,"messages",void 0),(0,u._)([(0,d.Cb)({type:[p.Z]})],N.prototype,"pointBarriers",void 0),(0,u._)([(0,m.r)("pointBarriers",["barriers"])],N.prototype,"readPointBarriers",null),(0,u._)([(0,d.Cb)({type:[p.Z]})],N.prototype,"polylineBarriers",void 0),(0,u._)([(0,m.r)("polylineBarriers")],N.prototype,"readPolylineBarriers",null),(0,u._)([(0,d.Cb)({type:[p.Z]})],N.prototype,"polygonBarriers",void 0),(0,u._)([(0,m.r)("polygonBarriers")],N.prototype,"readPolygonBarriers",null),(0,u._)([(0,d.Cb)({type:[b]})],N.prototype,"routeResults",void 0),N=(0,u._)([(0,y.j)("esri.rest.support.RouteSolveResult")],N);const T=N,A=(0,o.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});function _(e){return"esri.rest.support.FeatureSet"===(null==e?void 0:e.declaredClass)}async function C(e,t,r){const o=[],u=[],p={},c={},d=(0,l.en)(e),{path:m}=d;_(t.stops)&&(0,a.et)(t.stops.features,u,"stops.features",p),_(t.pointBarriers)&&(0,a.et)(t.pointBarriers.features,u,"pointBarriers.features",p),_(t.polylineBarriers)&&(0,a.et)(t.polylineBarriers.features,u,"polylineBarriers.features",p),_(t.polygonBarriers)&&(0,a.et)(t.polygonBarriers.features,u,"polygonBarriers.features",p);const y=await(0,n.aX)(u);for(const e in p){const t=p[e];o.push(e),c[e]=y.slice(t[0],t[1])}if((0,a.Wf)(c,o)){let e=null;try{e=await(0,a.bI)(m,t.apiKey,r)}catch{}e&&!e.hasZ&&(0,a.ef)(c,o)}for(const e in c)c[e].forEach(((r,s)=>{t.get(e)[s].geometry=r}));const f={...r,query:{...d.query,...A.toQueryParams(t),f:"json"}},h=m.endsWith("/solve")?m:`${m}/solve`,{data:v}=await(0,s.default)(h,f);return function(e){var t,r,s,o,n;const a=new Map,{directionLines:l,directionPoints:u,directions:p,routes:c,stops:d,barriers:m,polygonBarriers:y,polylineBarriers:f,messages:h}=e,v=null!=(t=null!=(r=null!=(s=null!=(o=null==c?void 0:c.spatialReference)?o:null==d?void 0:d.spatialReference)?s:null==m?void 0:m.spatialReference)?r:null==y?void 0:y.spatialReference)?t:null==f?void 0:f.spatialReference;null==c||c.features.forEach((e=>{const t=e.attributes.Name,r=e.attributes.ObjectID;a.has(t)?(a.get(t).route=e,a.get(t).routeId=r):a.set(t,{route:e,routeId:r,routeName:t}),(0,i.pC)(e.geometry)&&(e.geometry.spatialReference=v)})),null==p||p.forEach((e=>{const t=e.routeName;a.has(t)?a.get(t).directions=e:a.set(t,{routeName:t,directions:e})})),null==d||d.features.forEach((e=>{var t;const r=null!=(t=e.attributes.RouteName)?t:null;a.has(r)?a.get(r).stops?a.get(r).stops.push(e):a.get(r).stops=[e]:a.set(r,{stops:[e],routeName:r}),(0,i.pC)(e.geometry)&&(e.geometry.spatialReference=v)}));const g=null==(n=null==d?void 0:d.features.every((e=>null==e.attributes.RouteName)))||n;if((null==d?void 0:d.features.length)>0&&g){const e=Array.from(a.keys())[0];a.get(e).stops=a.get(null).stops,a.delete(null)}null==l||l.features.forEach((e=>{var t;const r=e.attributes.RouteID,s=null==(t=Array.from(a.values()).find((e=>e.routeId===r)))?void 0:t.routeName;if(s)if(a.has(s))if(a.get(s).directionLines)a.get(s).directionLines.features.push(e);else{const{fieldAliases:t,geometryType:r,spatialReference:i}=l;a.get(s).directionLines={features:[e],fieldAliases:t,geometryType:r,spatialReference:i}}else{const{fieldAliases:t,geometryType:r,spatialReference:i}=l;a.set(s,{routeName:s,directionLines:{features:[e],fieldAliases:t,geometryType:r,spatialReference:i}})}})),null==u||u.features.forEach((e=>{var t;const r=e.attributes.RouteID,s=null==(t=Array.from(a.values()).find((e=>e.routeId===r)))?void 0:t.routeName;if(s)if(a.has(s))if(a.get(s).directionPoints)a.get(s).directionPoints.features.push(e);else{const{fieldAliases:t,geometryType:r,spatialReference:i}=u;a.get(s).directionPoints={features:[e],fieldAliases:t,geometryType:r,spatialReference:i}}else{const{fieldAliases:t,geometryType:r,spatialReference:i}=u;a.set(s,{routeName:s,directionPoints:{features:[e],fieldAliases:t,geometryType:r,spatialReference:i}})}}));const b=Array.from(a.values());return T.fromJSON({routeResults:b,barriers:m,polygonBarriers:y,polylineBarriers:f,messages:h})}(v)}},47569:(e,t,r)=>{r.d(t,{Z:()=>v});var s=r(23324),i=(r(15572),r(43388)),o=r(74791),n=(r(89847),r(32780),r(76997),r(56568)),a=r(56793),l=r(13470);let u=class extends l.Z{};(0,s._)([(0,o.Cb)()],u.prototype,"events",void 0),(0,s._)([(0,o.Cb)()],u.prototype,"strings",void 0),u=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeature")],u);const p=u;var c=r(4130),d=r(3982),m=r(49030),y=r(77401),f=r(74991);let h=class extends c.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){var r;if(!e)return[];const s=null!=(r=t.summary.envelope.spatialReference)?r:t.spatialReference,i=s&&m.Z.fromJSON(s);return e.map((e=>{var t,r;const s=this._decompressGeometry(e.compressedGeometry),o=new y.Z({...s,spatialReference:i}),n=null!=(t=null==(r=e.events)?void 0:r.map((e=>{const{arriveTimeUTC:t,ETA:r,point:{x:s,y:o,z:n},strings:a}=e;return new p({geometry:new f.Z({x:s,y:o,z:n,hasZ:void 0!==n,spatialReference:i}),attributes:{ETA:r,arriveTimeUTC:t},strings:a})})))?t:[];return new p({attributes:e.attributes,events:n,geometry:o,strings:e.strings})}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,i.Wg)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressGeometry(e){let t=0,r=0,s=0,i=0;const o=[];let n,a,l,u,p,c,d,m,y=0,f=0,h=0;if(p=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),p||(p=[]),0===parseInt(p[y],32)){y=2;const e=parseInt(p[y],32);y++,c=parseInt(p[y],32),y++,1&e&&(f=p.indexOf("|")+1,d=parseInt(p[f],32),f++),2&e&&(h=p.indexOf("|",f)+1,m=parseInt(p[h],32),h++)}else c=parseInt(p[y],32),y++;for(;y<p.length&&"|"!==p[y];){n=parseInt(p[y],32)+t,y++,t=n,a=parseInt(p[y],32)+r,y++,r=a;const e=[n/c,a/c];f&&(u=parseInt(p[f],32)+s,f++,s=u,e.push(u/d)),h&&(l=parseInt(p[h],32)+i,h++,i=l,e.push(l/m)),o.push(e)}return{paths:[o],hasZ:f>0,hasM:h>0}}_mergePolylinesToSinglePath(e,t){if(0===e.length)return new y.Z({spatialReference:t});const r=[];for(const t of e)for(const e of t.paths)r.push(...e);const s=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||s.push(e)}));const{hasM:i,hasZ:o}=e[0];return new y.Z({hasM:i,hasZ:o,paths:[s],spatialReference:t})}};(0,s._)([(0,o.Cb)({type:d.Z,json:{read:{source:"summary.envelope"}}})],h.prototype,"extent",void 0),(0,s._)([(0,o.Cb)()],h.prototype,"features",void 0),(0,s._)([(0,n.r)("features")],h.prototype,"readFeatures",null),(0,s._)([(0,o.Cb)()],h.prototype,"geometryType",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"mergedGeometry",null),(0,s._)([(0,o.Cb)()],h.prototype,"routeId",void 0),(0,s._)([(0,o.Cb)()],h.prototype,"routeName",void 0),(0,s._)([(0,o.Cb)({value:null,readOnly:!0})],h.prototype,"strings",null),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],h.prototype,"totalDriveTime",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalLength"}}})],h.prototype,"totalLength",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalTime"}}})],h.prototype,"totalTime",void 0),h=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeatureSet")],h);const v=h},90997:(e,t,r)=>{r.d(t,{Z:()=>p});var s=r(23324),i=r(51598),o=r(37501),n=r(74791),a=(r(89847),r(32780),r(76997),r(56793));const l=new i.X({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let u=class extends o.wq{constructor(e){super(e),this.description=null,this.type=null}};(0,s._)([(0,n.Cb)({type:String,json:{write:!0}})],u.prototype,"description",void 0),(0,s._)([(0,n.Cb)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,s._)([(0,a.j)("esri.rest.support.GPMessage")],u);const p=u},19567:(e,t,r)=>{r.d(t,{Z:()=>p});var s=r(23324),i=r(51598),o=r(74791),n=(r(89847),r(32780),r(76997),r(56793)),a=r(90997);const l=new i.X({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let u=class extends a.Z{constructor(e){super(e),this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,s._)([(0,n.j)("esri.rest.support.NAMessage")],u);const p=u},89020:(e,t,r)=>{r.d(t,{Z:()=>d});var s,i=r(23324),o=r(37501),n=r(7175),a=r(74791),l=(r(76997),r(43329)),u=r(56793),p=r(85555);let c=s=class extends o.wq{constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}clone(){return new s((0,n.d9)({attributeParameterValues:this.attributeParameterValues,description:this.description,distanceAttributeName:this.distanceAttributeName,id:this.id,impedanceAttributeName:this.impedanceAttributeName,name:this.name,restrictionAttributeNames:this.restrictionAttributeNames,simplificationTolerance:this.simplificationTolerance,simplificationToleranceUnits:this.simplificationToleranceUnits,timeAttributeName:this.timeAttributeName,type:this.type,useHierarchy:this.useHierarchy,uturnAtJunctions:this.uturnAtJunctions}))}};(0,i._)([(0,a.Cb)({type:[Object],json:{write:!0}})],c.prototype,"attributeParameterValues",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"description",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"distanceAttributeName",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"id",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"impedanceAttributeName",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"name",void 0),(0,i._)([(0,a.Cb)({type:[String],json:{write:!0}})],c.prototype,"restrictionAttributeNames",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:{allowNull:!0}}})],c.prototype,"simplificationTolerance",void 0),(0,i._)([(0,l.J)(p.q$)],c.prototype,"simplificationToleranceUnits",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"timeAttributeName",void 0),(0,i._)([(0,l.J)(p.DJ)],c.prototype,"type",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"useHierarchy",void 0),(0,i._)([(0,l.J)(p.ip)],c.prototype,"uturnAtJunctions",void 0),c=s=(0,i._)([(0,u.j)("esri.rest.support.TravelMode")],c);const d=c},85555:(e,t,r)=>{r.d(t,{$7:()=>a,BW:()=>y,DJ:()=>p,Dd:()=>h,GX:()=>o,SS:()=>m,W7:()=>c,cW:()=>v,hB:()=>n,ip:()=>u,no:()=>l,oi:()=>f,q$:()=>i,td:()=>g,yP:()=>d});var s=r(51598);const i=(0,s.w)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),o=(0,s.w)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),n=(0,s.w)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),a=(0,s.w)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),l=(0,s.w)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),u=((0,s.w)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,s.w)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),p=((0,s.w)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,s.w)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,s.w)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),c=(0,s.w)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),d=(0,s.w)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),m=(0,s.w)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),y=(0,s.w)()({1:"right",2:"left"},{useNumericKeys:!0}),f=(0,s.w)()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),h=(0,s.w)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),v=(0,s.w)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),g=(0,s.w)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0})}}]);