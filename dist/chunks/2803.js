"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2803],{59868:(e,n,t)=>{t.d(n,{Z:()=>h});var a=t(23324),l=t(51598),i=t(74791),o=(t(89847),t(32780),t(76997),t(56793)),r=t(37501),s=t(68554),u=t(56923);const c=new l.X({classBreaksDef:"class-breaks-definition",uniqueValueDef:"unique-value-definition"});let m=class extends r.wq{constructor(){super(...arguments),this.baseSymbol=null,this.colorRamp=null,this.type=null}};(0,a._)([(0,i.Cb)({type:u.Z,json:{write:!0}})],m.prototype,"baseSymbol",void 0),(0,a._)([(0,i.Cb)({types:s.V,json:{read:{reader:s.i},write:!0}})],m.prototype,"colorRamp",void 0),(0,a._)([(0,i.Cb)({json:{read:c.read,write:c.write}})],m.prototype,"type",void 0),m=(0,a._)([(0,o.j)("esri.rest.support.ClassificationDefinition")],m);const d=m,f=new l.X({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),p=new l.X({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let v=class extends d{constructor(){super(...arguments),this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null,this.type="class-breaks-definition"}set standardDeviationInterval(e){"standard-deviation"===this.classificationMethod&&this._set("standardDeviationInterval",e)}set definedInterval(e){"defined-interval"===this.classificationMethod&&this._set("definedInterval",e)}};(0,a._)([(0,i.Cb)({json:{write:!0}})],v.prototype,"breakCount",void 0),(0,a._)([(0,i.Cb)({json:{write:!0}})],v.prototype,"classificationField",void 0),(0,a._)([(0,i.Cb)({type:String,json:{read:f.read,write:f.write}})],v.prototype,"classificationMethod",void 0),(0,a._)([(0,i.Cb)({json:{write:!0}})],v.prototype,"normalizationField",void 0),(0,a._)([(0,i.Cb)({json:{read:p.read,write:p.write}})],v.prototype,"normalizationType",void 0),(0,a._)([(0,i.Cb)({value:null,json:{write:!0}})],v.prototype,"standardDeviationInterval",null),(0,a._)([(0,i.Cb)({value:null,json:{write:!0}})],v.prototype,"definedInterval",null),(0,a._)([(0,i.Cb)()],v.prototype,"type",void 0),v=(0,a._)([(0,o.j)("esri.rest.support.ClassBreaksDefinition")],v);const h=v},72803:(e,n,t)=>{t.r(n),t.d(n,{classBreaks:()=>c,histogram:()=>m,summaryStatistics:()=>s,uniqueValues:()=>u}),t(76877);var a=t(49030),l=(t(50787),t(52032)),i=t(73546);let o=null;async function r(e,n){if(!n)return[];const t=e.field,r=e.valueExpression,s=e.normalizationType,u=e.normalizationField,c=e.normalizationTotal,m=[],d=e.viewInfoParams;let f=null,p=null;if(r){if(!o){const{arcadeUtils:e}=await(0,i.LC)();o=e}f=o.createFunction(r),p=d&&o.getViewInfo({viewingMode:d.viewingMode,scale:d.scale,spatialReference:new a.Z(d.spatialReference)})}return n.forEach((e=>{const n=e.attributes;let a;if(r){const n=o.createExecContext(e,p);a=o.executeFunction(f,n)}else n&&(a=n[t]);if(s&&isFinite(a)){const e=n&&parseFloat(n[u]);a=(0,l.fk)(a,s,e,c)}m.push(a)})),m}async function s(e){const{attribute:n,features:t}=e,{normalizationType:a,normalizationField:i,minValue:o,maxValue:s,fieldType:u}=n,c=await r({field:n.field,valueExpression:n.valueExpression,normalizationType:a,normalizationField:i,normalizationTotal:n.normalizationTotal,viewInfoParams:n.viewInfoParams},t),m=(0,l.S5)({normalizationType:a,normalizationField:i,minValue:o,maxValue:s}),d={value:.5,fieldType:u},f="esriFieldTypeString"===u?(0,l.H0)({values:c,supportsNullCount:m,percentileParams:d}):(0,l.i5)({values:c,minValue:o,maxValue:s,useSampleStdDev:!a,supportsNullCount:m,percentileParams:d});return(0,l.F_)(f,"esriFieldTypeDate"===u)}async function u(e){const{attribute:n,features:t}=e,a=await r({field:n.field,valueExpression:n.valueExpression,viewInfoParams:n.viewInfoParams},t),i=(0,l.eT)(a);return(0,l.Qm)(i,n.domain,n.returnAllCodedValues)}async function c(e){const{attribute:n,features:t}=e,{field:a,normalizationType:i,normalizationField:o,normalizationTotal:s,classificationMethod:u}=n,c=await r({field:a,valueExpression:n.valueExpression,normalizationType:i,normalizationField:o,normalizationTotal:s,viewInfoParams:n.viewInfoParams},t),m=(0,l.G2)(c,{field:a,normalizationType:i,normalizationField:o,normalizationTotal:s,classificationMethod:u,standardDeviationInterval:n.standardDeviationInterval,numClasses:n.numClasses,minValue:n.minValue,maxValue:n.maxValue});return(0,l.DL)(m,u)}async function m(e){const{attribute:n,features:t}=e,{field:a,normalizationType:i,normalizationField:o,normalizationTotal:s,classificationMethod:u}=n,c=await r({field:a,valueExpression:n.valueExpression,normalizationType:i,normalizationField:o,normalizationTotal:s,viewInfoParams:n.viewInfoParams},t);return(0,l.oF)(c,{field:a,normalizationType:i,normalizationField:o,normalizationTotal:s,classificationMethod:u,standardDeviationInterval:n.standardDeviationInterval,numBins:n.numBins,minValue:n.minValue,maxValue:n.maxValue})}},52032:(e,n,t)=>{t.d(n,{G2:()=>I,oF:()=>M,XL:()=>b,i5:()=>h,H0:()=>v,eT:()=>z,Qm:()=>g,Lq:()=>V,fk:()=>F,S5:()=>p,F_:()=>T,DL:()=>w});var a=t(59868);function l(e,n){return Number(e.toFixed(n))}function i(e){const{normalizationTotal:n}=e;return{classBreaks:o(e),normalizationTotal:n}}function o(e){const n=e.definition,{classificationMethod:t,breakCount:a,normalizationType:i,definedInterval:o}=n,u=[];let c=e.values;if(0===c.length)return[];c=c.sort(((e,n)=>e-n));const m=c[0],d=c[c.length-1];if("equal-interval"===t)if(c.length>=a){const e=(d-m)/a;let n=m;for(let t=1;t<a;t++){const a=l(m+t*e,6);u.push({minValue:n,maxValue:a,label:r(n,a,i)}),n=a}u.push({minValue:n,maxValue:d,label:r(n,d,i)})}else c.forEach((e=>{u.push({minValue:e,maxValue:e,label:r(e,e,i)})}));else if("natural-breaks"===t){const n=function(e){const n=[],t=[];let a=Number.MIN_VALUE,l=1,i=-1;for(let o=0;o<e.length;o++){const r=e[o];r===a?(l++,t[i]=l):null!==r&&(n.push(r),a=r,l=1,t.push(l),i++)}return{uniqueValues:n,valueFrequency:t}}(c),t=e.valueFrequency||n.valueFrequency,o=s(n.uniqueValues,t,a);let f=m;for(let e=1;e<a;e++)if(n.uniqueValues.length>e){const t=l(n.uniqueValues[o[e]],6);u.push({minValue:f,maxValue:t,label:r(f,t,i)}),f=t}u.push({minValue:f,maxValue:d,label:r(f,d,i)})}else if("quantile"===t)if(c.length>=a&&m!==d){let e=m,n=Math.ceil(c.length/a),t=0;for(let l=1;l<a;l++){let o=n+t-1;o>c.length&&(o=c.length-1),o<0&&(o=0),u.push({minValue:e,maxValue:c[o],label:r(e,c[o],i)}),e=c[o],t+=n,n=Math.ceil((c.length-t)/(a-l))}u.push({minValue:e,maxValue:d,label:r(e,d,i)})}else{let e=-1;for(let n=0;n<c.length;n++){const t=c[n];t!==e&&(e=t,u.push({minValue:e,maxValue:t,label:r(e,t,i)}),e=t)}}else if("standard-deviation"===t){const e=function(e){let n=0;for(let t=0;t<e.length;t++)n+=e[t];return n/=e.length,n}(c),n=function(e,n){let t=0;for(let a=0;a<e.length;a++){const l=e[a];t+=(l-n)*(l-n)}return t/=e.length,Math.sqrt(t)}(c,e);if(0===n)u.push({minValue:c[0],maxValue:c[0],label:r(c[0],c[0],i)});else{const t=function(e,n,t,a,l){let i=Math.max(a-e,n-a)/l/t;return i=i>=1?1:i>=.5?.5:.25,i}(m,d,a,e,n)*n;let o=0,s=m;for(let n=a;n>=1;n--){const a=l(e-(n-.5)*t,6);u.push({minValue:s,maxValue:a,label:r(s,a,i)}),s=a,o++}let c=l(e+.5*t,6);u.push({minValue:s,maxValue:c,label:r(s,c,i)}),s=c,o++;for(let n=1;n<=a;n++)c=o===2*a?d:l(e+(n+.5)*t,6),u.push({minValue:s,maxValue:c,label:r(s,c,i)}),s=c,o++}}else if("defined-interval"===t){if(!o)return u;const e=c[0],n=c[c.length-1],t=Math.ceil((n-e)/o);let a=e;for(let n=1;n<t;n++){const t=l(e+n*o,6);u.push({minValue:a,maxValue:t,label:r(a,t,i)}),a=t}u.push({minValue:a,maxValue:n,label:r(a,n,i)})}return u}function r(e,n,t){let a=null;return a=e===n?t&&"percent-of-total"===t?e+"%":e.toString():t&&"percent-of-total"===t?e+"% - "+n+"%":e+" - "+n,a}function s(e,n,t){const a=e.length,l=[];t>a&&(t=a);for(let e=0;e<t;e++)l.push(Math.round(e*a/t-1));l.push(a-1);let i=u(l,e,n,t);return function(e,n,t,a,l,i){let o=0,r=0,s=0,u=0,m=!0;for(let d=0;d<2&&m;d++){0===d&&(m=!1);for(let d=0;d<i-1;d++)for(;t[d+1]+1!==t[d+2];){t[d+1]=t[d+1]+1;const i=c(d,t,a,l);s=i.sbMean,o=i.sbSdcm;const f=c(d+1,t,a,l);if(u=f.sbMean,r=f.sbSdcm,!(o+r<n[d]+n[d+1])){t[d+1]=t[d+1]-1;break}n[d]=o,n[d+1]=r,e[d]=s,e[d+1]=u,m=!0}for(let d=i-1;d>0;d--)for(;t[d]!==t[d-1]+1;){t[d]=t[d]-1;const i=c(d-1,t,a,l);s=i.sbMean,o=i.sbSdcm;const f=c(d,t,a,l);if(u=f.sbMean,r=f.sbSdcm,!(o+r<n[d-1]+n[d])){t[d]=t[d]+1;break}n[d-1]=o,n[d]=r,e[d-1]=s,e[d]=u,m=!0}}return m}(i.mean,i.sdcm,l,e,n,t)&&(i=u(l,e,n,t)),l}function u(e,n,t,a){let l=[],i=[],o=[],r=0;const s=[],u=[];for(let l=0;l<a;l++){const a=c(l,e,n,t);s.push(a.sbMean),u.push(a.sbSdcm),r+=u[l]}let m,d=r,f=!0;for(;f||r<d;){f=!1,l=[];for(let n=0;n<a;n++)l.push(e[n]);for(let t=0;t<a;t++)for(let l=e[t]+1;l<=e[t+1];l++)if(m=n[l],t>0&&l!==e[t+1]&&Math.abs(m-s[t])>Math.abs(m-s[t-1]))e[t]=l;else if(t<a-1&&e[t]!==l-1&&Math.abs(m-s[t])>Math.abs(m-s[t+1])){e[t+1]=l-1;break}d=r,r=0,i=[],o=[];for(let l=0;l<a;l++){i.push(s[l]),o.push(u[l]);const a=c(l,e,n,t);s[l]=a.sbMean,u[l]=a.sbSdcm,r+=u[l]}}if(r>d){for(let n=0;n<a;n++)e[n]=l[n],s[n]=i[n],u[n]=o[n];r=d}return{mean:s,sdcm:u}}function c(e,n,t,a){let l=0,i=0;for(let o=n[e]+1;o<=n[e+1];o++){const e=a[o];l+=t[o]*e,i+=e}i<=0&&console.log("Exception in Natural Breaks calculation");const o=l/i;let r=0;for(let l=n[e]+1;l<=n[e+1];l++)r+=a[l]*(t[l]-o)**2;return{sbMean:o,sbSdcm:r}}const m=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,d=new Set(["esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble"]),f=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function p(e){const n=null!=e.normalizationField||null!=e.normalizationType,t=null!=e.minValue||null!=e.maxValue,a=!!e.sqlExpression&&e.supportsSQLExpression;return!n&&!t&&!a}function v(e){const n=e.returnDistinct?[...new Set(e.values)]:e.values,t=n.filter((e=>null!=e)).length,a={count:t};return e.supportsNullCount&&(a.nullcount=n.length-t),e.percentileParams&&(a.median=b(n,e.percentileParams)),a}function h(e){const{values:n,useSampleStdDev:t,supportsNullCount:a}=e;let l=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,o=null,r=null,s=null,u=null,c=0;const m=null==e.minValue?-1/0:e.minValue,d=null==e.maxValue?1/0:e.maxValue;for(const e of n)Number.isFinite(e)?e>=m&&e<=d&&(o+=e,l=Math.min(l,e),i=Math.max(i,e),c++):"string"==typeof e&&c++;if(c&&null!=o){r=o/c;let e=0;for(const t of n)Number.isFinite(t)&&t>=m&&t<=d&&(e+=(t-r)**2);u=t?c>1?e/(c-1):0:c>0?e/c:0,s=Math.sqrt(u)}else l=null,i=null;const f={avg:r,count:c,max:i,min:l,stddev:s,sum:o,variance:u};return a&&(f.nullcount=n.length-c),e.percentileParams&&(f.median=b(n,e.percentileParams)),f}function b(e,n){const{fieldType:t,value:a,orderBy:l,isDiscrete:i}=n,o=V(t,"desc"===l);if(0===(e=[...e].filter((e=>null!=e)).sort(((e,n)=>o(e,n)))).length)return null;if(a<=0)return e[0];if(a>=1)return e[e.length-1];const r=(e.length-1)*a,s=Math.floor(r),u=s+1,c=r%1,m=e[s],d=e[u];return u>=e.length||i||"string"==typeof m||"string"==typeof d?m:m*(1-c)+d*c}function V(e,n){const t=n?1:-1,a=function(e){return e?(e,n)=>n-e:(e,n)=>e-n}(n),l=y(n);if(!e||!["esriFieldTypeDate","esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...d].includes(e))return(e,n)=>"number"==typeof e&&"number"==typeof n?a(e,n):"string"==typeof e&&"string"==typeof n?l(e,n):t;if("esriFieldTypeDate"===e)return(e,n)=>{const l=new Date(e).getTime(),i=new Date(n).getTime();return isNaN(l)||isNaN(i)?t:a(l,i)};if(d.has(e))return(e,n)=>a(e,n);if("esriFieldTypeString"===e)return(e,n)=>l(e,n);if("esriFieldTypeGUID"===e||"esriFieldTypeGlobalID"===e){const e=y(n);return(n,t)=>e(x(n),x(t))}return n?(e,n)=>1:(e,n)=>-1}function y(e){return e?(e,n)=>{var t,a;return(e=null==(t=e)?void 0:t.toUpperCase())>(n=null==(a=n)?void 0:a.toUpperCase())?-1:e<n?1:0}:(e,n)=>{var t,a;return(e=null==(t=e)?void 0:t.toUpperCase())<(n=null==(a=n)?void 0:a.toUpperCase())?-1:e>n?1:0}}function x(e){return e.substr(24,12)+e.substr(19,4)+e.substr(16,2)+e.substr(14,2)+e.substr(11,2)+e.substr(9,2)+e.substr(6,2)+e.substr(4,2)+e.substr(2,2)+e.substr(0,2)}function T(e,n){let t;for(t in e)f.indexOf(t)>-1&&(Number.isFinite(e[t])||(e[t]=null));return n?(["avg","stddev","variance"].forEach((n=>{null!=e[n]&&(e[n]=Math.ceil(e[n]))})),e):e}function z(e){const n={};for(let t of e)(null==t||"string"==typeof t&&""===t.trim())&&(t=null),null==n[t]?n[t]={count:1,data:t}:n[t].count++;return{count:n}}function g(e,n,t){const a=e.count,l=[];t&&n&&"coded-value"===n.type&&n.codedValues.forEach((e=>{const n=e.code;a.hasOwnProperty(n)||(a[n]={data:n,count:0})}));for(const e in a){const n=a[e];l.push({value:n.data,count:n.count,label:n.label})}return{uniqueValueInfos:l}}function F(e,n,t,a){let l=null;switch(n){case"log":0!==e&&(l=Math.log(e)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(a)&&0!==a&&(l=e/a*100);break;case"field":Number.isFinite(t)&&0!==t&&(l=e/t);break;case"natural-log":e>0&&(l=Math.log(e));break;case"square-root":e>0&&(l=e**.5)}return l}function I(e,n){const t=function(e){const n=e.field,t=e.classificationMethod||"equal-interval",l=e.normalizationType,i=e.normalizationField,o=new a.Z;return o.classificationField=n,o.breakCount=e.breakCount,o.classificationMethod=t,o.standardDeviationInterval="standard-deviation"===t?e.standardDeviationInterval||1:void 0,o.normalizationType=l,o.normalizationField="field"===l?i:void 0,o}({field:n.field,normalizationType:n.normalizationType,normalizationField:n.normalizationField,classificationMethod:n.classificationMethod,standardDeviationInterval:n.standardDeviationInterval,breakCount:n.numClasses||5});return e=function(e,n,t){return n=null==n?-1/0:n,t=null==t?1/0:t,e.filter((e=>Number.isFinite(e)&&e>=n&&e<=t))}(e,n.minValue,n.maxValue),i({definition:t,values:e,normalizationTotal:n.normalizationTotal})}function w(e,n){let t=e.classBreaks;const a=t.length,l=t[0].minValue,i=t[a-1].maxValue,o="standard-deviation"===n,r=m;return t=t.map((e=>{const n=e.label,t={minValue:e.minValue,maxValue:e.maxValue,label:n};if(o&&n){const e=n.match(r).map((e=>+e.trim()));2===e.length?(t.minStdDev=e[0],t.maxStdDev=e[1],e[0]<0&&e[1]>0&&(t.hasAvg=!0)):1===e.length&&(n.includes("<")?(t.minStdDev=null,t.maxStdDev=e[0]):n.includes(">")&&(t.minStdDev=e[0],t.maxStdDev=null))}return t})),{minValue:l,maxValue:i,classBreakInfos:t,normalizationTotal:e.normalizationTotal}}function M(e,n){const{min:t,max:a,intervals:l}=function(e,n){const{field:t,classificationMethod:a,standardDeviationInterval:l,normalizationType:i,normalizationField:o,normalizationTotal:r,minValue:s,maxValue:u}=n,c=n.numBins||10;let m=null,d=null,f=null;if(a&&"equal-interval"!==a||i){const{classBreaks:n}=I(e,{field:t,normalizationType:i,normalizationField:o,normalizationTotal:r,classificationMethod:a,standardDeviationInterval:l,minValue:s,maxValue:u,numClasses:c});m=n[0].minValue,d=n[n.length-1].maxValue,f=n.map((e=>[e.minValue,e.maxValue]))}else{if(null!=s&&null!=u)m=s,d=u;else{const n=h({values:e,minValue:s,maxValue:u,useSampleStdDev:!i,supportsNullCount:p({normalizationType:i,normalizationField:o,minValue:s,maxValue:u})});m=n.min,d=n.max}f=function(e,n,t){const a=(n-e)/t,l=[];let i,o=e;for(let e=1;e<=t;e++)i=o+a,i=Number(i.toFixed(16)),l.push([o,e===t?n:i]),o=i;return l}(m,d,c)}return{min:m,max:d,intervals:f}}(e,n),i=l.map(((e,n)=>({minValue:l[n][0],maxValue:l[n][1],count:0})));for(const n of e)if(null!=n&&n>=t&&n<=a){const e=C(l,n);e>-1&&i[e].count++}return{bins:i,minValue:t,maxValue:a,normalizationTotal:n.normalizationTotal}}function C(e,n){let t=-1;for(let a=e.length-1;a>=0;a--)if(n>=e[a][0]){t=a;break}return t}}}]);